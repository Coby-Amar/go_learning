// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package database

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type DailyLimit struct {
	UserID       pgtype.UUID `json:"-"`
	Carbohydrate int16       `json:"carbohydrate" validate:"required,min=1"`
	Protein      int16       `json:"protein" validate:"required,min=1"`
	Fat          int16       `json:"fat" validate:"required,min=1"`
}

type Product struct {
	ID           pgtype.UUID      `json:"id"`
	CreatedAt    pgtype.Timestamp `json:"-"`
	UpdatedAt    pgtype.Timestamp `json:"-"`
	Name         string           `json:"name" validate:"required,min=4,max=200"`
	Amount       int16            `json:"amount" validate:"required,min=1"`
	Carbohydrate int16            `json:"carbohydrate"`
	Protein      int16            `json:"protein"`
	Fat          int16            `json:"fat"`
	UserID       pgtype.UUID      `json:"-"`
}

type Report struct {
	ID                 pgtype.UUID `json:"id"`
	CreatedAt          pgtype.Timestamp
	UpdatedAt          pgtype.Timestamp
	Date               pgtype.Date    `json:"date"`
	AmoutOfEntries     int16          `json:"numberOfEntries"`
	CarbohydratesTotal pgtype.Numeric `json:"carbohydratesTotal"`
	ProteinsTotal      pgtype.Numeric `json:"proteinsTotal"`
	FatsTotal          pgtype.Numeric `json:"fatsTotal"`
	UserID             pgtype.UUID
}

type ReportEntry struct {
	ID            pgtype.UUID `json:"id"`
	CreatedAt     pgtype.Timestamp
	UpdatedAt     pgtype.Timestamp
	Amount        int16          `json:"amount" validate:"required,min=0"`
	Carbohydrates pgtype.Numeric `json:"carbohydrates" validate:"required,min=0"`
	Proteins      pgtype.Numeric `json:"proteins" validate:"required,min=0"`
	Fats          pgtype.Numeric `json:"fats" validate:"required,min=0"`
	ProductID     pgtype.UUID    `json:"productId" validate:"required,uuid4"`
	ReportID      pgtype.UUID    `json:"reportId" validate:"uuid4"`
}

type User struct {
	ID          pgtype.UUID      `json:"-"`
	CreatedAt   pgtype.Timestamp `json:"-"`
	UpdatedAt   pgtype.Timestamp `json:"-"`
	LastLogin   pgtype.Timestamp `json:"-"`
	Name        string           `json:"name" validate:"required,min=3"`
	Email       string           `json:"-"`
	PhoneNumber string           `json:"phoneNumber" validate:"required"`
}

type Vault struct {
	UserID   pgtype.UUID `json:"-"`
	HashedPw string      `json:"-"`
	Active   bool        `json:"-"`
}
