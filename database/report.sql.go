// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: report.sql

package database

import (
	"context"
	"time"
)

const createReport = `-- name: CreateReport :one
INSERT INTO _reports(_date)
VALUES ($1)
RETURNING _id, _created_at, _updated_at, _date
`

func (q *Queries) CreateReport(ctx context.Context, Date time.Time) (Report, error) {
	row := q.db.QueryRowContext(ctx, createReport, Date)
	var i Report
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Date,
	)
	return i, err
}

const getAllReports = `-- name: GetAllReports :many
SELECT _id, _created_at, _updated_at, _date FROM _reports
`

func (q *Queries) GetAllReports(ctx context.Context) ([]Report, error) {
	rows, err := q.db.QueryContext(ctx, getAllReports)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Report
	for rows.Next() {
		var i Report
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Date,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
